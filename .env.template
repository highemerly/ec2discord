#############################
# Settings of ec2discord.rb #
#############################


######################################
# Discord settings
######################################

#
# Discord authentication ID and token.
#
# ***CHANGE REQUIRED***
# To get, visit at https://discordapp.com/developers/applications.
# In SETTINGS -> Bot -> Privileged Gateway Intents, PRESENCE INTENT should be enabled.
# Be careful not to publish this key.
#
DC_CLIENT_ID="<your-client-id>"
DC_BOT_TOKEN="<your-bot-token>"

#
# Identifier added before command.
#
# The bot identifies the word after this character as the command for bot.
# "/" and "#" are not recommended.
# One character.
#
DC_COMMAND_PREFIX="!"


######################################
# AWS settings
######################################

#
# API gateway endpoint to start EC2 instance.
#
# ***CHANGE REQUIRED***
# Before you get this endpoint, generally you should set up AWS lambda functions.
# Visit https://aws.amazon.com/premiumsupport/knowledge-center/start-stop-lambda-cloudwatch/.
#
AWS_EC2START_URI="https://<your-ec2-endpoint>.<your-ec2-region>.amazonaws.com/<your-ec2-staging>/<your-ec2-resource>"


######################################
# AWS EC2 instance settings
######################################

#
# (SSH) Hostname or IP address of EC2 instance
#
# This settings is only required when elastic IP is set.
# If you set 'SOCKET_SERVER=true'
#
SV_SSH_HOSTNAME="localhost"

#
# (SSH) Username and private key of EC2 instance
#
SV_SSH_PORT="22"
SV_SSH_USERNAME="centos"
SV_SSH_PRIVATE_KEY="~/.ssh/id_rsa"

#
# Interval time which server control is not accepted after startup
#
# To prevent unpredictable failure, ec2discord.rb will prevent frequency request of starting instance.
# Once starting instance is required, over this interval.
# In Sec.
#
SV_START_MIN_INTERVAL="20"

#
# Interval Time which server control is not accepted after stop
#
# in order to prevent failure.
# In Sec.
#
SV_STOP_MIN_INTERVAL="10"


######################################
# EC2 instance's application settings
######################################

#
# Main service name
#
# If set, this service will be stopped before shutdown.
# **Note: In case of startup, this service will be launched automatically is assumed).
# Add to this, you can observe the status of this service.
#
# SV_SERVICENAME="<your-service-name>"

#
# Duration time between 'stopping service' and 'shutdown'.
#
# When SV_SERVICENAME is set, this value is meaningful.
# Before shutdown server, main service will be stopped by manually.
#
# SV_STOP_WAIT="45"


######################################
# Optional settings (Socket communications)
######################################

#
# Socket communications: enable socket server function
#
# In case elastic IPv4 address is not used, requirecse socket server for recieve server metrics.
# Socket communication will be operatied from EC2 instance to this bot.
# **Note: the client binary which is located to dist/client should be copied to EC2 instance**
#
# SOCKET_SERVER=true

#
# Socket communications: TCP port number
#
# SOCKET_SERVER_PORT="9002"


######################################
# Optioncal settings (DNS service)
######################################

#
# DNS service: Enable the linkage feature with CloudFlare
#
# In this feature, you can update DNS A record automatically.
# Generally, the feature of socket communications is required.
#
# CLOUDFLARE=true

#
# DNS service: Available token key of CloudFlare
#
# To get, visit https://dash.cloudflare.com/profile/api-tokens.
#
# CLOUDFLARE_API_TOKEN="<cloudflare-api-token>""

#
# DNS service: Zone identifier which will be modified by bot.
#
# To get,
# $ curl -s -X GET "https://api.cloudflare.com/client/v4/zones?name=<cloudflare-top-domain-name>" \
#           -H "X-Auth-Email: <cloudflare-acount-email>" \
#           -H "X-Auth-Key: <cloudflare-api-token>" \
#           -H "Content-Type: application/json"
# More detailed information described here: https://api.cloudflare.com/
#
# CLOUDFLARE_ZONE_ID="<cloudflare-zone-identifier>""

#
# DNS service: Target domain name of rewrite A record.
#
# CLOUDFLARE_DOMAIN="<domain-name>""

######################################
# Optional settings (SQLITE)
######################################

#
# SQLITE: enable sqlite database for more experience
#
# The sqlite is the lightest database.
# This is required by only dictionary function.
#
SQLITE=true

#
# SQLITE: the file path of sqlite
#
SQLITE_PATH="dictionary.db"